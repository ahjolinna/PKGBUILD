# Maintainer: ahjolinna <ahjolinna@yahoo.com>

# Build with VDPAU or VAAPI support? This only needs to be defined once and will
# remain until the packages are removed. "1" to enable (0 for VAAPI). 
_vdpau= 

pkgname=mpv-ahjolinna-build-git
pkgver=20160406.a606b92
pkgrel=1
pkgdesc="MPV with my personal config's (uses statically linked ffmpeg). (GIT version)"
arch=('x86_64')
depends=('desktop-file-utils'
         'smbclient'
         'libguess'
         'enca'
         'libxv'
         'libcdio-paranoia'
         'openal'
         'luajit'
         'lua'
         'libssh'
         'libcaca'
         'rsound'
         'libxss'
         'libdvdnav'
         'jack'
         'samba'
         'libbluray'
         'libpulse'
         'x265'
         'libbs2b'
         'libgme'
         'mesa'
         'libxinerama'
         'libxrandr'
         'libxkbcommon'
         'hicolor-icon-theme'
         'sdl2'
         'lcms2'
         'libva'
         'rubberband'
         'uchardet'
         'libarchive'
         'libsoxr'
         'v4l-utils'
         'vapoursynth'
         'otf-source-sans-pro'
            )
license=('GPL3;BSD;LGPL')
url="http://mpv.io"
screenshot='http://i.imgur.com/eFjf71A.png'
makedepends=('git'
             'python3-docutils'
             'yasm'
             'ladspa'
             'fontconfig'
             'fribidi'
             'acpitool'
             'inxi'
             )
optdepends=('youtube-dl: Another way to view youtuve videos with mpv'
            'zsh-completions: Additional completion definitions for Zsh users'
            'livestreamer: to watch live video streams (twitch.tv)'
            'vapoursynth-plugin-mvtools: Realtime motion interpolating playback in mpv'
            'acpitool: for battery detection'
            'inxi: HIDPI-detection')
# check kind of graphic card
if [ -f /usr/bin/nvidia-settings ]|[ $_vdpau = 1 ]| [ -f /usr/lib/xorg/modules/drivers/nouveau_drv.so ]; then
    echo "installing libvdpau for NVIDIA users" 
makedepends+=('libvdpau')
optdepends+=('libvdpau: hardware-acceleration for NVIDIA users')
   elif [ -f /usr/bin/aticonfig ]|[ $_vdpau = 1 ]| [ -f /usr/lib/xorg/modules/drivers/radeon_drv.so ]; then
    echo "installing libvdpau for Radeon users" 
makedepends+=('libvdpau')
optdepends+=('libvdpau: hardware-acceleration for Radeon users')
else
    echo "installing libva for hardware-acceleration support for opensource driver users " 
makedepends+=('libva')
optdepends+=('libva: for open source driver users')
    fi

provides=('mpv')
conflicts=('mpv')
options=('!emptydirs')
install=mpv-git.install

source=('git+https://github.com/mpv-player/mpv-build.git'
        'git+https://github.com/mpv-player/mpv.git'
        'ffmpeg::git+https://github.com/FFmpeg/FFmpeg.git'
        'git+https://github.com/libass/libass.git'
        #'git+http://anongit.freedesktop.org/git/fribidi/fribidi.git'
        'ftp://ftp.ritual.org/common/ColorManagement/BT.709_Profiles.zip'
        'https://github.com/ahjolinna/mpv-conf/raw/master/PKGBUILD/mpv.tar.gz'
        #'mpv.tar.gz'
        'mpv-uq.desktop'
        'mpv-hq.desktop'
        'mpv-mq.desktop'
        'mpv-MVtools.desktop'
        'mpv-lq.desktop'
         )

sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'd53aa2c59350a8e364b1a18a5509ba995826f7d37e34ad029251bee082f3c360'
            '34850907a75ca9f60def1ef964f24abe2d4f94109d03322c1e8569784fc989b3'
            'f76c836c56ce84659a4e4256cc0afb515f87aa77e33dfa164e25f79ee5e2bdd5'
            'ddd18dbccdaa4513586cb97299e88564e3289940f25d7ebe762c4482fbad3809'
            '8cf41f23572417836084209fce343f779e72dea9688dc84e23e8eb913d002d5f'
            '9a7f7d78a71c5492709abfb8f4ad598fa02867e71b5645bb639850163264762b'
            'e02f7b07653ea4ce9745b9f699954f5a4eafd416ada5a5d032c7dd7294921f90')


pkgver() {
  cd mpv
  echo "$(git log -1 --format="%cd" --date=short | tr -d '-').$(git log -1 --format="%h")"
}

prepare() {
  cd mpv-build
  ln -s ../mpv
  ln -s ../ffmpeg
  ln -s ../libass
 #ln -s ../fribidi


echo "cheking if VPDAU or VAAPI will be enabled or disabled" 
 if [ $_vdpau = 1 ]|| [ -f /usr/lib/libvdpau.so ]; then
 echo "building with vdpau support" 
  # Set ffmpeg/libass/fribidi/mpv flags
  echo "--disable-programs \
  --enable-libx265 \
  --enable-libfreetype \
  --enable-libbluray  \
  --enable-libpulse \
  --enable-libopus  \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libxvid \
  --enable-libtheora \
  --enable-libssh \
  --enable-nonfree \
  --enable-ladspa \
  --enable-libbs2b  \
  --enable-avisynth  \
  --enable-avresample  \
  --enable-fontconfig \
  --enable-libass \
  --enable-openal \
  --enable-opengl \
  --enable-runtime-cpudetect \
  --enable-swresample \
  --enable-version3 \
  --enable-vdpau" > ffmpeg_options
  
  echo "--prefix=/usr \
  --confdir=/etc/mpv \
  --disable-test \
  --disable-build-date
  --enable-libmpv-shared \
  --enable-openal \
  --disable-sdl1 \
  --enable-sdl2 \
  --enable-libmpv-shared \
  --enable-zsh-comp \
  --enable-pulse \
  --enable-egl-x11 \
  --enable-wayland \
  --enable-vdpau \
  --enable-vaapi \
  --enable-libsmbclient \
  --enable-dvdread \
  --enable-libarchive \
  --lua=luajit \
  --enable-gpl3 \
  --enable-libavdevice \
  --enable-vapoursynth \
  --enable-vdpau-hwaccel"  > mpv_options
  
  else
echo "building with vaapi support"
  echo "--disable-programs \
  --enable-libx265 \
  --enable-libfreetype \
  --enable-libbluray  \
  --enable-libpulse \
  --enable-libopus  \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libxvid \
  --enable-libtheora \
  --enable-libssh \
  --enable-nonfree \
  --enable-ladspa \
  --enable-libbs2b  \
  --enable-avisynth  \
  --enable-avresample  \
  --enable-fontconfig \
  --enable-libass \
  --enable-openal \
  --enable-opengl \
  --enable-runtime-cpudetect \
  --enable-swresample \
  --enable-version3"  > ffmpeg_options
  
  echo "--prefix=/usr \
  --confdir=/etc/mpv \
  --enable-openal \
  --disable-sdl1 \
  --enable-sdl2 \
  --disable-test \
  --disable-build-date
  --enable-libmpv-shared \
  --enable-zsh-comp \
  --enable-pulse \
  --enable-egl-x11 \
  --enable-wayland \
  --enable-vaapi \
  --enable-libsmbclient \
  --enable-dvdread \
  --enable-libarchive \
  --lua=luajit \
  --enable-gpl3 \
  --enable-libavdevice \
  --enable-vapoursynth \
  --enable-vaapi-hwaccel" > mpv_options
fi
  # point python to python3
  sed -i 's|#!/usr/bin/env python|#!/usr/bin/env python3|' ${srcdir}/mpv/bootstrap.py
  # initialize
  cd mpv
  ./bootstrap.py
  sed -i 's/vendor-completions/site-functions/' wscript_build.py

  # waf looking for python2...
  #sed -i 's|#!/usr/bin/env python|#!/usr/bin/env python3|' ${srcdir}/mpv/waf
  #sed -i 's/$? != 0/$? >> 8 != 0/' TOOLS/zsh.pl
}

build() {
CFLAGS="$CFLAGS -I/usr/include/samba-4.0"    
  cd mpv-build
  ./build
}

package() {
  cd mpv-build
  DESTDIR="${pkgdir}" ./install

  install -Dm755 mpv/TOOLS/mpv_identify.sh "${pkgdir}/usr/bin/mpv-identify"
  install -Dm755 mpv/TOOLS/umpv "${pkgdir}/usr/bin/umpv"

    # install the .desktop files
  install -Dm644 "${srcdir}/mpv-lq.desktop" "${pkgdir}/usr/share/applications/mpv-lq.desktop"
  install -Dm644 "${srcdir}/mpv-mq.desktop" "${pkgdir}/usr/share/applications/mpv-mq.desktop"
  install -Dm644 "${srcdir}/mpv-hq.desktop" "${pkgdir}/usr/share/applications/mpv-hq.desktop"
  install -Dm644 "${srcdir}/mpv-uq.desktop" "${pkgdir}/usr/share/applications/mpv-uq.desktop"
  install -Dm644 "${srcdir}/mpv-MVtools.desktop" "${pkgdir}/usr/share/applications/mpv-MVtools.desktop"
  
  # install BT.709 ICC profiles (https://github.com/mpv-player/mpv/issues/534#issuecomment-35823203)
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.gamma.1.95.icc"
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.icc"
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.linear.icc"
  
  echo "installing configure files"
  install -d ${pkgdir}/etc/mpv
  cp -r ${srcdir}/mpv/etc*/* "${pkgdir}"/etc/mpv/

 # sed 's|/usr/local/etc/mpv.conf|/etc/mpv.conf|g' -i "${pkgdir}/usr/share/doc/mpv/mpv.conf"

  (cd mpv/TOOLS/lua; for i in $(find . -type f); do install -Dm644 "${i}" "${pkgdir}/usr/share/mpv/scripts/${i}"; done)
}
