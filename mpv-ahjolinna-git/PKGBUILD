# Maintainer:  ahjolinna <ahjolinna@yahoo.com>

# WARNING: The configure script will automatically enable any optional
# features it finds support for on your system. If you want to avoid
# linking against something you have installed, you'll have to disable
# it in the configure below. The package() script will attempt to
# update the dependencies based on dynamic libraries when packaging.

pkgname=mpv-ahjolinna-git
_gitname=mpv
pkgver=43006.g5f1ff78
pkgrel=1
pkgdesc='Video player based on MPlayer/mplayer2 (git version)'
arch=('i686' 'x86_64' 'armv6h' 'armv7h')
license=('GPL3')
url='http://mpv.io'
_undetected_depends=('desktop-file-utils' 'hicolor-icon-theme' 'xdg-utils')
depends=('ffmpeg' "${_undetected_depends[@]}")
optdepends=('youtube-dl: Another way to view youtuve videos with mpv'
            'zsh-completions: Additional completion definitions for Zsh users'
            'livestreamer: to watch live video streams (twitch.tv)'
            'vapoursynth-plugin-mvtools: Realtime motion interpolating playback in mpv'
            'acpitool: for battery detection'
            'inxi: HIDPI-detection')
makedepends=('mesa' 'python3-docutils' 'ladspa' 'x264' 'x265' 'jack'
             'samba' 'acpitool' 'inxi' 'git' 'vapoursynth'
         'otf-source-sans-pro')
# check kind of graphic card
if [ -f /usr/bin/nvidia-settings ]|[ $_vdpau = 1 ]| [ -f /usr/lib/xorg/modules/drivers/nouveau_drv.so ]; then
    echo "installing libvdpau for NVIDIA users" 
makedepends+=('libvdpau')
optdepends+=('libvdpau: hardware-acceleration for NVIDIA users')
   elif [ -f /usr/bin/aticonfig ]|[ $_vdpau = 1 ]| [ -f /usr/lib/xorg/modules/drivers/radeon_drv.so ]; then
    echo "installing libvdpau for Radeon users" 
makedepends+=('libvdpau')
optdepends+=('libvdpau: hardware-acceleration for Radeon users')
else
    echo "installing libva for hardware-acceleration support for opensource driver users " 
makedepends+=('libva')
optdepends+=('libva: for open source driver users')
    fi
    
provides=('mpv')
conflicts=('mpv' 'mpv-vapoursynth' 'mpv-ahjolinna-build-git' 'mpv-build-git' )
options=('!emptydirs')
install=mpv.install
source=('git+https://github.com/mpv-player/mpv'
        'find-deps.py'
         "ftp://ftp.ritual.org/common/ColorManagement/BT.709_Profiles.zip"
         "https://github.com/ahjolinna/mpv-conf/raw/master/PKGBUILD/mpv.tar.gz"
        "mpv-uq.desktop"
        'mpv-hq.desktop'
         'mpv-lq.desktop'
         'mpv-mq.desktop'
         'mpv-MVtools.desktop')
md5sums=('SKIP'
         'ffb774b13decbefc62908dda0332046b'
         'bb1f2e496e3f32b44837cbbef19cd64d'
         '67bf42b187a12aa5bfa08d395cf4b65d'
         '9d10f7c53aab4f726c10822c39a99a3c'
         'e587c9d9417ad6846901345cbdbc22a3'
         '2986b3018ba15baca49f5557d74105b8'
         'ea905a31c345aa2e5b907e867f81059a'
         'e6d495509e594d513c238518ebc7874b')
sha256sums=('SKIP'
            'ce974e160347202e0dc63f6a7a5a89e52d2cc1db2d000c661fddb9dc1d007c02'
            'd53aa2c59350a8e364b1a18a5509ba995826f7d37e34ad029251bee082f3c360'
            'ba8056673ee30fb771b0705cc4a1a5a36891aa00bdbfc05e527c4a0c153b7470'
            'f76c836c56ce84659a4e4256cc0afb515f87aa77e33dfa164e25f79ee5e2bdd5'
            'ddd18dbccdaa4513586cb97299e88564e3289940f25d7ebe762c4482fbad3809'
            'e02f7b07653ea4ce9745b9f699954f5a4eafd416ada5a5d032c7dd7294921f90'
            '8cf41f23572417836084209fce343f779e72dea9688dc84e23e8eb913d002d5f'
            '9a7f7d78a71c5492709abfb8f4ad598fa02867e71b5645bb639850163264762b')

pkgver() {
  cd "$srcdir/$_gitname"
  #_curtag="$(git rev-list --tags --max-count=1)"
  #_tagver="$(git describe --tags $_curtag | sed -e 's:^v::' -e 's:-:_:g')"
  #_commits="$(git rev-list --count HEAD --since=$_tagver)"
  #_sha="$(git rev-parse --short HEAD)"
  #printf "%s_%s_g%s" $_tagver $_commits $_sha
  echo "$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)"
}

prepare() {
  cd "$srcdir/$_gitname"
  ./bootstrap.py
}

prepare() {
  # point python to python3
  sed -i 's|#!/usr/bin/env python|#!/usr/bin/env python3|' "$srcdir/$_gitname"/bootstrap.py
  # initialize
  cd "$srcdir/$_gitname"
  ./bootstrap.py
  sed -i 's/vendor-completions/site-functions/' wscript_build.py

  # waf looking for python2...
  sed -i 's|#!/usr/bin/env python|#!/usr/bin/env python3|' "$srcdir/$_gitname"/waf
}


build() {
  cd "$srcdir/$_gitname"

  CFLAGS="$CFLAGS -I/usr/include/samba-4.0"

echo "cheking if VPDAU or VAAPI will be enabled or disabled" 
 if [[ $_vdpau = 1 ]] || pacman -Qo /usr/lib/libvdpau.so &>/dev/null; then
 echo "building with vdpau support" 
  ./waf configure --prefix=/usr \
    --confdir=/etc/mpv \
    --enable-libmpv-shared \
    --enable-cdda \
    --disable-sdl1 \
    --enable-sdl2 \
    --enable-zsh-comp \
    --enable-alsa \
    --enable-pulse \
    --enable-openal \
    --enable-wayland \
    --enable-gl-wayland \
    --enable-egl-x11 \
    --enable-libsmbclient \
    --enable-dvdread \
    --enable-libv4l2 \
    --enable-gpl3 \
    --enable-vdpau \
    --enable-vdpau-hwaccel  \
    --enable-vapoursynth

  ./waf build
  
   else
   
     ./waf configure --prefix=/usr \
    --confdir=/etc/mpv \
    --enable-libmpv-shared \
    --enable-cdda \
    --disable-sdl1 \
    --enable-sdl2 \
    --enable-zsh-comp \
    --enable-alsa \
    --enable-pulse \
    --enable-openal \
    --enable-wayland \
    --enable-gl-wayland \
    --enable-egl-x11 \
    --enable-libsmbclient \
    --enable-dvdread \
    --enable-libv4l2 \
    --enable-gpl3 \
    --enable-vaapi \
    --enable-vaapi-hwaccel \
    --enable-vapoursynth

 ./waf build
 
 fi
}

package() {
  cd "$srcdir/$_gitname"
  ./waf install --destdir="$pkgdir"


 # install the .desktop files
  install -Dm644 "${srcdir}/mpv-lq.desktop" "${pkgdir}/usr/share/applications/mpv-lq.desktop"
  install -Dm644 "${srcdir}/mpv-mq.desktop" "${pkgdir}/usr/share/applications/mpv-mq.desktop"
  install -Dm644 "${srcdir}/mpv-hq.desktop" "${pkgdir}/usr/share/applications/mpv-hq.desktop"
  install -Dm644 "${srcdir}/mpv-uq.desktop" "${pkgdir}/usr/share/applications/mpv-uq.desktop"
  install -Dm644 "${srcdir}/mpv-MVtools.desktop" "${pkgdir}/usr/share/applications/mpv-MVtools.desktop"
  
  
  # install BT.709 ICC profiles (https://github.com/mpv-player/mpv/issues/534#issuecomment-35823203)
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.gamma.1.95.icc"
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.icc"
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.linear.icc"
  
  
    #install ahjolinna "config-build" files
 cp -R ${srcdir}/mpv/etc*/* ${pkgdir}/etc/mpv
    install -d "${pkgdir}/etc/mpv/"
  

  # Update dependencies automatically based on dynamic libraries
  _detected_depends=($("$srcdir"/find-deps.py "$pkgdir"/usr/{bin/mpv,lib/libmpv.so}))
  echo 'Auto-detected dependencies:'
  echo "${_detected_depends[@]}" | fold -s -w 79 | sed 's/^/ /'
  depends=("${_detected_depends[@]}" "${_undetected_depends[@]}")
}
