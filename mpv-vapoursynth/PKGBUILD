# Maintainer: ahjolinna <ahjolinna@yahoo.com>

# Build with VDPAU or VAAPI support? This only needs to be defined once and will
# remain until the packages are removed. "1" to enable vdpau "0" for vaapi.
_vdpau= 


pkgname=mpv-vapoursynth
_pkgname=mpv
epoch=1
pkgver=0.16.0
pkgrel=3
pkgdesc='Video player based on MPlayer/mplayer2'
arch=('x86_64')
license=('GPL3')
url='http://mpv.io'
screenshot='http://i.imgur.com/dI35UEt.png'
depends=('pulseaudio' 'ffmpeg' 'lcms2' 'libdvdread' 'libgl' 'libbs2b' 
        'libxinerama' 'libxv' 'libxkbcommon' 'libva'  'libass' 'uchardet' 
	 'wayland' 'desktop-file-utils' 'hicolor-icon-theme' 'v4l-utils'
         'xdg-utils' 'lua' 'libdvdnav' 'libcdio-paranoia' 'libbluray' 'libxss'
         'enca' 'libguess' 'harfbuzz' 'graphite' 'libxrandr' 'rubberband' 'smbclient' 'vapoursynth'
         'otf-source-sans-pro')
makedepends=('mesa' 'python3-docutils' 'ladspa' 'x264' 'x265' 'jack'
             'samba' 'acpitool' 'inxi')
optdepends=('youtube-dl: Another way to view youtuve videos with mpv'
            'zsh-completions: Additional completion definitions for Zsh users'
            'livestreamer: to watch live video streams (twitch.tv)'
            'vapoursynth-plugin-mvtools: Realtime motion interpolating playback in mpv'
            'acpitool: for battery detection'
            'inxi: HIDPI-detection')

# check kind of graphic card
if [ -f /usr/bin/nvidia-settings ]|[ $_vdpau = 1 ]| [ -f /usr/lib/xorg/modules/drivers/nouveau_drv.so ]; then
    echo "installing libvdpau for NVIDIA users" 
makedepends+=('libvdpau')
optdepends+=('libvdpau: hardware-acceleration for NVIDIA users')
   elif [ -f /usr/bin/aticonfig ]|[ $_vdpau = 1 ]| [ -f /usr/lib/xorg/modules/drivers/radeon_drv.so ]; then
    echo "installing libvdpau for Radeon users" 
makedepends+=('libvdpau')
optdepends+=('libvdpau: hardware-acceleration for Radeon users')
else
    echo "installing libva for hardware-acceleration support for opensource driver users " 
makedepends+=('libva')
optdepends+=('libva: for open source driver users')
    fi

conflicts=('mpv' 'mpv-git' 'mpv-build-git' 'mpv-ahjolinna-build-git' 'mpv-ahjolinna-git' )
provides=('mpv')
options=('!emptydirs' '!buildflags')
install=mpv.install
source=("$_pkgname-$pkgver.tar.gz::https://github.com/mpv-player/$_pkgname/archive/v$pkgver.tar.gz"
         "ftp://ftp.ritual.org/common/ColorManagement/BT.709_Profiles.zip"
        # "https://github.com/ahjolinna/mpv-conf/raw/master/PKGBUILD/mpv.tar.gz"
        "mpv.tar.gz" 
        "mpv-uq.desktop"
        'mpv-hq.desktop'
         'mpv-lq.desktop'
         'mpv-mq.desktop'
         'mpv-MVtools.desktop')

sha256sums=('fc3619de0ede16fbb023ac72589090e8e77fd9d9e03a81adc728105d50ef38ba'
            'd53aa2c59350a8e364b1a18a5509ba995826f7d37e34ad029251bee082f3c360'
            '5ff8ec63afa9b12245bb4ea9c6499091bbddb0b480c7cdfbd1750545fb34d0b2'
            'f76c836c56ce84659a4e4256cc0afb515f87aa77e33dfa164e25f79ee5e2bdd5'
            'ddd18dbccdaa4513586cb97299e88564e3289940f25d7ebe762c4482fbad3809'
            'e02f7b07653ea4ce9745b9f699954f5a4eafd416ada5a5d032c7dd7294921f90'
            '8cf41f23572417836084209fce343f779e72dea9688dc84e23e8eb913d002d5f'
            '9a7f7d78a71c5492709abfb8f4ad598fa02867e71b5645bb639850163264762b')

prepare() {
  # point python to python3
  sed -i 's|#!/usr/bin/env python|#!/usr/bin/env python3|' ${srcdir}/${_pkgname}-${pkgver}/bootstrap.py
  # initialize
  cd ${_pkgname}-${pkgver}
  ./bootstrap.py
  sed -i 's/vendor-completions/site-functions/' wscript_build.py

  # waf looking for python2...
  sed -i 's|#!/usr/bin/env python|#!/usr/bin/env python3|' ${srcdir}/${_pkgname}-${pkgver}/waf
}

build() {
  cd $_pkgname-$pkgver
echo "cheking if VPDAU or VAAPI will be enabled or disabled" 
 if [[ $_vdpau = 1 ]] || pacman -Qo /usr/lib/libvdpau.so &>/dev/null; then
 echo "building with vdpau support" 
  ./waf configure --prefix=/usr \
    --confdir=/etc/mpv \
    --enable-libmpv-shared \
    --enable-cdda \
    --disable-sdl1 \
    --enable-sdl2 \
    --enable-zsh-comp \
    --enable-alsa \
    --enable-pulse \
    --enable-openal \
    --enable-wayland \
    --enable-gl-wayland \
    --enable-egl-x11 \
    --enable-libsmbclient \
    --enable-dvdread \
    --enable-libv4l2 \
    --enable-gpl3 \
    --enable-vdpau \
    --enable-vdpau-hwaccel  \
    --enable-vapoursynth

  ./waf build
  
   else
   
     ./waf configure --prefix=/usr \
    --confdir=/etc/mpv \
    --enable-libmpv-shared \
    --enable-cdda \
    --disable-sdl1 \
    --enable-sdl2 \
    --enable-zsh-comp \
    --enable-alsa \
    --enable-pulse \
    --enable-openal \
    --enable-wayland \
    --enable-gl-wayland \
    --enable-egl-x11 \
    --enable-libsmbclient \
    --enable-dvdread \
    --enable-libv4l2 \
    --enable-gpl3 \
    --enable-vaapi \
    --enable-vaapi-hwaccel \
    --enable-vapoursynth

 ./waf build
 
 fi
}
 
package() {
  cd ${_pkgname}-${pkgver}
 
  ./waf install --destdir="${pkgdir}" 
  
 
   # install the .desktop files
  install -Dm644 "${srcdir}/mpv-lq.desktop" "${pkgdir}/usr/share/applications/mpv-lq.desktop"
  install -Dm644 "${srcdir}/mpv-mq.desktop" "${pkgdir}/usr/share/applications/mpv-mq.desktop"
  install -Dm644 "${srcdir}/mpv-hq.desktop" "${pkgdir}/usr/share/applications/mpv-hq.desktop"
  install -Dm644 "${srcdir}/mpv-uq.desktop" "${pkgdir}/usr/share/applications/mpv-uq.desktop"
  install -Dm644 "${srcdir}/mpv-MVtools.desktop" "${pkgdir}/usr/share/applications/mpv-MVtools.desktop"
  
  
  # install BT.709 ICC profiles (https://github.com/mpv-player/mpv/issues/534#issuecomment-35823203)
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.gamma.1.95.icc"
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.icc"
   install -Dm755 "${srcdir}/BT.709_Profiles/BT.709.gamma.1.95.icc" "${pkgdir}/usr/share/color/icc/BT.709_Profiles/BT.709.linear.icc"
  
  
    #install ahjolinna "config-build" files
 cp -R ${srcdir}/mpv/etc*/* ${pkgdir}/etc/mpv
    install -d "${pkgdir}/etc/mpv/"
  
  
}
